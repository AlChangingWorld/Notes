# 信息的表示和处理
## 补码

补码的思想来源于 钟表
比如现在是7点钟, 需要往后退4个小时为3点    7 - 4 = 3
也可以说是 7 再过 8 个小时为3点     7+5=12点 0+3=3点 也就是3+5为8个小时

也就是可以使用减法实现退后4小时 7 - 4 = 3
也可以使用加法实现退后4小时 7 + 8 = 3

这个 8 也就可以相当于 退后四个小时 的补码 任何数都可以通过加8的形式来 时光倒退4小时

例如2点 往后退4小时为 10点 2+8=10
例如9点 往后退4小时为 5点  9+8=17 == 5点

让CPU从此之后不需要再做减法 只需要加法运算 这就是钟表原理的好处

所以计算机中的所有负数全部使用补码进行保存 以便进行加法运算

正数的补码等于它的源码
5 - 0101 最高位为符号位0

负数的补码等于反码+1 

钟表原理的补码运算:
-4 也就 12 - 4 = 8 

也可以想成是 补码在计算机中
4 + -4的补码 = 0
0100 + 补码 = 0
10000 - 0100 = 补码
1111 - 0100 + 1  = 取反 1011 + 1 = 1100 = 补码



二进制中的补码运算也就是
000 - 4(100) = 
1000 - 4(100) = 100
最后加上符号位 1
=1100

普遍的方法 
-4的补码:                                    
先转成原码 1100 符号位为1                  
符号位保持不变 其余位按位取反得 1011  (相当于不加符号位  取反相当于 111 - 011 )
最后加1得 1100         ( 111 - 011 + 1 相当于1000 - 4(100) = 100 )
5(0101)+ -4(1100) = 1(0001)  

## 布尔代数
And     
A & B = 全1才1 有0则0  

Or
A | B = 全0才0 有1则1

Not
~A  取反

Xor 异或
A^B 相同为0 不同为1